const state = {
  isCoffeeMakerReady : true,
  seedStocks: {
    arabica: 250,
    robusta: 60,
    liberica: 80
  }
}

const getSeeds = (type,miligrams) => {
  return new Promise((resolve,reject) => {
    if(state.seedStocks[type] >= miligrams){
      state.seedStocks[type] -= miligrams;
      resolve("Biji kopi didapatkan!");
    }
    else{
      reject("Maaf stok kopi habis!")
    }
  });
}

const makeCoffee = seeds => {
  return new Promise((resolve, reject) => {
    if(state.isCoffeeMakerReady) {
      resolve("Kopi berhasil dibuat");
    }
    else{
      reject("Maaf mesin tidak dapat digunakan!");
    }
  })
}

const servingToTable = coffee => {
  return new Promise(resolve => {
    resolve("Pesanan kopi sudah selesai!")
  })
}

function reserveACoffee(type, miligrams) {
 getSeeds(type, miligrams)
 .then(makeCoffee)
 .then(servingToTable)
 .then(resolvedValue => { //Handle onFulfilled/Success
   console.log(resolvedValue);
 })
 .catch(rejectedReason => { //Handle onRejected/Reject
   console.log(rejectedReason);
 })
}
 
/* Silahkan ubah tipe kopi dan kuantitasnya, untuk mendapatkan promise rejection */
reserveACoffee("arabica", 250); //Jenis kopi yang kita inginkan dan kuantitasnya